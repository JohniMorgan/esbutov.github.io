import{_ as k}from"./nuxt-link.cd8f3196.js";import{_ as v}from"./AiGameBoard.ed56eeea.js";import{u as S,s as l,o,c as s,b as a,w as r,a as n,t as i,v as e,B as u,A as d,d as c}from"./entry.99c7acb5.js";const b={class:"centered"},x=n("h1",null,"Автоматический алгоритм DFS",-1),y={key:2},C=n("label",null,"Идёт запись логов, необходимо подождать",-1),F={key:3,href:"/logs.txt",download:""},U={__name:"dfs",setup(B){const t=S();function p(){t.autoDFS()}function m(){t.refresh()}return(D,w)=>{const f=k,g=v,_=l("v-btn"),h=l("v-progress-circular");return o(),s("div",b,[x,a(f,{to:"/algorithm/dfs-stepbystep"},{default:r(()=>[c("Перейти на пошаговый алгоритм")]),_:1}),n("label",null,"Полученая глубина решения "+i(e(t).depthForUser),1),a(g,{configuration:e(t).view.configuration},null,8,["configuration"]),n("label",null,"Выполненых итераций: "+i(e(t).stepCountForUser),1),e(t).status=="Ожидает"?(o(),u(_,{key:0,onClick:p},{default:r(()=>[c("Автоматически DFS")]),_:1})):(o(),u(_,{key:1,onClick:m},{default:r(()=>[c("Сбросить алгоритм")]),_:1})),e(t).loadingLogs?(o(),s("div",y,[a(h,{indeterminate:"",color:"red"}),C])):d("",!0),e(t).logsReady?(o(),s("a",F,"Получить логи отработанного алгоритма")):d("",!0)])}}};export{U as default};
